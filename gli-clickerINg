<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Glitch Clicker</title>
  <style>
    html, body {
      margin: 0;
      padding: 0;
      overflow: hidden;
      font-family: 'Arial', sans-serif;
    }
    body {
      background: url('https://media.tenor.com/Z6WyU3rddr4AAAAd/glitch.gif') no-repeat center center fixed;
      background-size: cover;
      color: white;
      text-align: center;
    }
    #container {
      position: relative;
      z-index: 2;
      padding-top: 60px;
    }
    header {
      position: fixed;
      top: 0;
      width: 100%;
      display: flex;
      justify-content: space-between;
      padding: 10px 20px;
      background-color: rgba(0,0,0,0.5);
      z-index: 3;
    }
    #clicker-img {
      width: 250px;
      cursor: pointer;
      transition: transform 0.1s;
    }
    #clicker-img:active {
      transform: scale(0.95);
    }
    .info {
      font-size: 18px;
      margin: 10px;
      text-shadow: 0 0 5px #ff00ff;
    }
    #message {
      font-size: 22px;
      margin-top: 15px;
      transition: opacity 1s ease-in-out;
      text-shadow: 0 0 10px cyan;
    }
    #message.hidden {
      opacity: 0;
    }
    button {
      margin: 5px;
      padding: 10px 15px;
      font-size: 16px;
      background: rgba(0, 0, 0, 0.6);
      color: white;
      border: 1px solid #ff00ff;
      cursor: pointer;
      transition: background 0.3s;
    }
    button:hover {
      background: rgba(255, 0, 255, 0.3);
    }
    input {
      padding: 5px;
      margin: 5px;
    }
  </style>
</head>
<body>
  <header>
    <div>‚öôÔ∏è Settings</div>
    <div onclick="toggleCodeInput()">üîë Codes</div>
  </header>
  <div id="container">
    <h1>Glitch Clicker</h1>
    <img id="clicker-img" src="https://media.tenor.com/NOYF3f82b_gAAAAC/glitch.gif" alt="Glitch Click">

    <div class="info" id="counter">Glitch Points: 0</div>
    <div class="info" id="multiplier">Multiplier: 1</div>
    <div class="info" id="rebirths">Rebirths: 0 | Super: 0 | Glitch: 0</div>
    <div class="info" id="ascensions">Ascensions: 0</div>
    <div id="message"></div>

    <button onclick="buyMultiplier()">Buy +1 Multiplier (100 GP)</button>
    <button onclick="buyAutoClicker()">Buy Auto Clicker (500 GP)</button>
    <button id="rebirthBtn" onclick="rebirth()" style="display:none">üîÅ Rebirth (10M GP)</button>
    <button id="superRebirthBtn" onclick="superRebirth()" style="display:none">üí† Super Rebirth (50 R)</button>
    <button id="glitchRebirthBtn" onclick="glitchRebirth()" style="display:none">üß¨ Glitch Rebirth (50 SR)</button>
    <button id="ascendBtn" onclick="ascend()" style="display:none">üöÄ Ascend (1B GP)</button>

    <div id="codeInput" style="margin-top:15px; display:none">
      <input type="text" id="codeBox" placeholder="Enter code...">
      <button onclick="useCode()">Submit</button>
    </div>
  </div>
  <script>
    let points = 0;
    let baseMultiplier = 1;
    let autoClicker = false;
    let rebirthCount = 0;
    let superRebirthCount = 0;
    let glitchRebirthCount = 0;
    let ascensionCount = 0;
    let usedCodes = new Set();

    // ŒöœéŒ¥ŒπŒ∫ŒµœÇ Œ≥ŒπŒ± bonus
    const codes = {
      "superglitch": () => { points += 100000; showMessage("+100k GP"); },
      "firstglitch": () => { baseMultiplier += 1000; showMessage("+1000 Multiplier"); },
      "bestglitchcode": () => { baseMultiplier += 100000; showMessage("+100k Multiplier"); },
      "megaburst": () => { points += 1000000; showMessage("Mega Burst +1M GP!"); },
      "ultramulti": () => { baseMultiplier += 5000; showMessage("Ultra Multi +5K!"); },
      "rebirth": () => { points = 0; baseMultiplier = 1; showMessage("Rebirth Reset!"); },
      "ascend": () => { points = 0; baseMultiplier = 1; showMessage("Ascension Reset!"); },
      // ŒîŒ∑ŒºŒπŒøœÖœÅŒ≥ŒØŒ± 2000 œÉŒµŒπœÅœéŒΩ Œ∫œâŒ¥ŒπŒ∫œéŒΩ
      "bonus1": () => { points += 10000; showMessage("+10k GP!"); },
      "bonus2": () => { baseMultiplier += 500; showMessage("+500 Multiplier!"); },
      "bonus3": () => { points += 50000; showMessage("+50k GP!"); },
      "bonus4": () => { baseMultiplier += 2000; showMessage("+2k Multiplier!"); },
      "bonus5": () => { points += 200000; showMessage("+200k GP!"); },
      // Continue this pattern for 2000 codes...
    };

    for (let i = 6; i <= 2000; i++) {
      codes[`bonus${i}`] = () => {
        points += i * 1000;
        showMessage(`+${i * 1000} GP!`);
      };
    }

    const counter = document.getElementById("counter");
    const multDisplay = document.getElementById("multiplier");
    const rebirthDisplay = document.getElementById("rebirths");
    const ascensionDisplay = document.getElementById("ascensions");
    const message = document.getElementById("message");

    document.getElementById("clicker-img").addEventListener("click", () => {
      points += getEffectiveMultiplier();
      updateDisplay();
    });

    function updateDisplay() {
      counter.textContent = `Glitch Points: ${points}`;
      multDisplay.textContent = `Multiplier: ${getEffectiveMultiplier()}`;
      rebirthDisplay.textContent = `Rebirths: ${rebirthCount} | Super: ${superRebirthCount} | Glitch: ${glitchRebirthCount}`;
      ascensionDisplay.textContent = `Ascensions: ${ascensionCount}`;
      document.getElementById("rebirthBtn").style.display = points >= 10000000 ? "inline-block" : "none";
      document.getElementById("superRebirthBtn").style.display = rebirthCount >= 50 ? "inline-block" : "none";
      document.getElementById("glitchRebirthBtn").style.display = superRebirthCount >= 50 ? "inline-block" : "none";
      document.getElementById("ascendBtn").style.display = points >= 1000000000 ? "inline-block" : "none";
    }

    function showMessage(text) {
      message.textContent = text;
      message.classList.remove("hidden");
      setTimeout(() => message.classList.add("hidden"), 2000);
    }

    function toggleCodeInput() {
      const el = document.getElementById("codeInput");
      el.style.display = el.style.display === "none" ? "block" : "none";
    }

    function useCode() {
      const code = document.getElementById("codeBox").value.trim().toLowerCase();
      if (usedCodes.has(code)) return showMessage("‚ö†Ô∏è Already used");
      if (codes[code]) {
        codes[code]();
      } else {
        showMessage("‚ùå Invalid code");
      }
      usedCodes.add(code);
      document.getElementById("codeBox").value = "";
      updateDisplay();
    }

    function buyMultiplier() {
      if (points >= 100) {
        points -= 100;
        baseMultiplier++;
        showMessage("+1 Multiplier");
        updateDisplay();
      } else showMessage("Not enough GP!");
    }

    function buyAutoClicker() {
      if (!autoClicker && points >= 500) {
        points -= 500;
        autoClicker = true;
        setInterval(() => {
          points += getEffectiveMultiplier();
          updateDisplay();
        }, 1000);
        showMessage("Auto Clicker ON");
      }
    }

    function getEffectiveMultiplier() {
      let m = baseMultiplier;
      if (rebirthCount > 0) m *= Math.pow(2, rebirthCount);
      if (superRebirthCount > 0) m *= Math.pow(50, superRebirthCount);
      if (glitchRebirthCount > 0) m *= Math.pow(10000, glitchRebirthCount);
      if (ascensionCount > 0) m *= Math.pow(1.25, ascensionCount);
      return m;
    }

    function resetAllProgress() {
      points = 0;
      baseMultiplier = 1;
      autoClicker = false;
      rebirthCount = 0;
      superRebirthCount = 0;
      glitchRebirthCount = 0;
    }

    function rebirth() {
      if (points >= 10000000) {
        resetAllProgress();
        rebirthCount++;
        showMessage("üîÅ Rebirth Complete!");
        updateDisplay();
      }
    }

    function superRebirth() {
      if (rebirthCount >= 50) {
        resetAllProgress();
        superRebirthCount++;
        showMessage("üí† Super Rebirth Complete!");
        updateDisplay();
      }
    }

    function glitchRebirth() {
      if (superRebirthCount >= 50) {
        resetAllProgress();
        glitchRebirthCount++;
        showMessage("üß¨ Glitch Rebirth Activated!");
        updateDisplay();
      }
    }

    function ascend() {
      if (points >= 1000000000) {
        resetAllProgress();
        ascensionCount++;
        showMessage("üöÄ Ascended! Upgrades unlocked.");
        updateDisplay();
      }
    }
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Glitch Clicker</title>
  <style>
    html, body {
      margin: 0;
      padding: 0;
      overflow: hidden;
      font-family: 'Arial', sans-serif;
    }
    body {
      background: url('https://media.tenor.com/Z6WyU3rddr4AAAAd/glitch.gif') no-repeat center center fixed;
      background-size: cover;
      color: white;
      text-align: center;
    }
    #container {
      position: relative;
      z-index: 2;
      padding-top: 60px;
    }
    header {
      position: fixed;
      top: 0;
      width: 100%;
      display: flex;
      justify-content: space-between;
      padding: 10px 20px;
      background-color: rgba(0,0,0,0.5);
      z-index: 3;
    }
    #clicker-img {
      width: 250px;
      cursor: pointer;
      transition: transform 0.1s;
    }
    #clicker-img:active {
      transform: scale(0.95);
    }
    .info {
      font-size: 18px;
      margin: 10px;
      text-shadow: 0 0 5px #ff00ff;
    }
    #message {
      font-size: 22px;
      margin-top: 15px;
      transition: opacity 1s ease-in-out;
      text-shadow: 0 0 10px cyan;
    }
    #message.hidden {
      opacity: 0;
    }
    button {
      margin: 5px;
      padding: 10px 15px;
      font-size: 16px;
      background: rgba(0, 0, 0, 0.6);
      color: white;
      border: 1px solid #ff00ff;
      cursor: pointer;
      transition: background 0.3s;
    }
    button:hover {
      background: rgba(255, 0, 255, 0.3);
    }
    input {
      padding: 5px;
      margin: 5px;
    }
  </style>
</head>
<body>
  <header>
    <div>‚öôÔ∏è Settings</div>
    <div onclick="toggleCodeInput()">üîë Codes</div>
  </header>
  <div id="container">
    <h1>Glitch Clicker</h1>
    <img id="clicker-img" src="https://media.tenor.com/NOYF3f82b_gAAAAC/glitch.gif" alt="Glitch Click">

    <div class="info" id="counter">Glitch Points: 0</div>
    <div class="info" id="multiplier">Multiplier: 1</div>
    <div class="info" id="rebirths">Rebirths: 0</div>
    <div class="info" id="superRebirths">Super Rebirths: 0</div>
    <div class="info" id="ascensions">Ascensions: 0</div>
    <div id="message"></div>

    <button onclick="buyMultiplier()">Buy +1 Multiplier (100 GP)</button>
    <button onclick="buyAutoClicker()">Buy Auto Clicker (500 GP)</button>
    <button id="rebirthBtn" onclick="rebirth()" style="display:none">üîÅ Rebirth (10M GP)</button>
    <button id="superRebirthBtn" onclick="superRebirth()" style="display:none">üí† Super Rebirth (50 Rebirths)</button>
    <button id="ascendBtn" onclick="ascend()" style="display:none">üöÄ Ascend (1B GP)</button>

    <div id="codeInput" style="margin-top:15px; display:none">
      <input type="text" id="codeBox" placeholder="Enter code...">
      <button onclick="useCode()">Submit</button>
    </div>
  </div>
  <script>
    let points = 0;
    let baseMultiplier = 1;
    let autoClicker = false;
    let rebirthCount = 0;
    let superRebirthCount = 0;
    let ascensionCount = 0;
    let usedCodes = new Set();

    const codes = {
      "superglitch": () => { points += 100000; showMessage("+100k GP!"); },
      "firstglitch": () => { baseMultiplier += 1000; showMessage("+1000 Multiplier!"); },
      "bestglitchcode": () => { baseMultiplier += 100000; showMessage("+100k Multiplier!"); },
      "rebirth": () => { points = 0; baseMultiplier = 1; showMessage("Rebirth Reset!"); },
      "ascend": () => { points = 0; baseMultiplier = 1; showMessage("Ascension Reset!"); },
    };

    const counter = document.getElementById("counter");
    const multDisplay = document.getElementById("multiplier");
    const rebirthDisplay = document.getElementById("rebirths");
    const superRebirthDisplay = document.getElementById("superRebirths");
    const ascensionDisplay = document.getElementById("ascensions");
    const message = document.getElementById("message");

    document.getElementById("clicker-img").addEventListener("click", () => {
      points += getEffectiveMultiplier();
      updateDisplay();
    });

    function updateDisplay() {
      counter.textContent = `Glitch Points: ${points}`;
      multDisplay.textContent = `Multiplier: ${getEffectiveMultiplier()}`;
      rebirthDisplay.textContent = `Rebirths: ${rebirthCount}`;
      superRebirthDisplay.textContent = `Super Rebirths: ${superRebirthCount}`;
      ascensionDisplay.textContent = `Ascensions: ${ascensionCount}`;
      document.getElementById("rebirthBtn").style.display = points >= 10000000 ? "inline-block" : "none";
      document.getElementById("superRebirthBtn").style.display = rebirthCount >= 50 ? "inline-block" : "none";
      document.getElementById("ascendBtn").style.display = points >= 1000000000 ? "inline-block" : "none";
    }

    function showMessage(text) {
      message.textContent = text;
      message.classList.remove("hidden");
      setTimeout(() => message.classList.add("hidden"), 2000);
    }

    function toggleCodeInput() {
      const el = document.getElementById("codeInput");
      el.style.display = el.style.display === "none" ? "block" : "none";
    }

    function useCode() {
      const code = document.getElementById("codeBox").value.trim().toLowerCase();
      if (usedCodes.has(code)) return showMessage("‚ö†Ô∏è Already used");
      if (codes[code]) {
        codes[code]();
      } else {
        showMessage("‚ùå Invalid code");
      }
      usedCodes.add(code);
      document.getElementById("codeBox").value = "";
      updateDisplay();
    }

    function buyMultiplier() {
      if (points >= 100) {
        points -= 100;
        baseMultiplier++;
        showMessage("+1 Multiplier");
        updateDisplay();
      } else showMessage("Not enough GP!");
    }

    function buyAutoClicker() {
      if (!autoClicker && points >= 500) {
        points -= 500;
        autoClicker = true;
        setInterval(() => {
          points += getEffectiveMultiplier();
          updateDisplay();
        }, 1000);
        showMessage("Auto Clicker ON");
      }
    }

    function getEffectiveMultiplier() {
      let m = baseMultiplier;
      if (rebirthCount > 0) m *= Math.pow(2, rebirthCount); // Double multiplier with each rebirth
      if (superRebirthCount > 0) m *= Math.pow(50, superRebirthCount); // Multiply by 50 for each super rebirth
      if (ascensionCount > 0) m *= Math.pow(1.25, ascensionCount); // Increase by 25% with each ascension
      return m;
    }

    function resetAllProgress() {
      points = 0;
      baseMultiplier = 1;
      autoClicker = false;
    }

    function rebirth() {
      if (points >= 10000000) {
        resetAllProgress();
        rebirthCount++;
        showMessage("üîÅ Rebirth Complete!");
        updateDisplay();
      }
    }

    function superRebirth() {
      if (rebirthCount >= 50) {
        resetAllProgress();
        superRebirthCount++;
        showMessage("üí† Super Rebirth Complete!");
        updateDisplay();
      }
    }

    function ascend() {
      if (points >= 1000000000) {
        resetAllProgress();
        ascensionCount++;
        showMessage("üöÄ Ascended! Upgrades unlocked.");
        updateDisplay();
      }
    }

    updateDisplay();
  </script>
</body>
</html>

    updateDisplay();
  </script>
</body>
</html>
